{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/routes.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/listjob/listjob.component.css","webpack:///./src/app/listjob/listjob.component.html","webpack:///./src/app/listjob/listjob.component.ts","webpack:///./src/app/searchjob/searchjob.component.css","webpack:///./src/app/searchjob/searchjob.component.html","webpack:///./src/app/searchjob/searchjob.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from '@angular/router';\r\nimport { SearchjobComponent } from '../searchjob/searchjob.component';\r\nimport { ListjobComponent } from '../listjob/listjob.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n    { path: 'jobsearch', component: SearchjobComponent },\r\n    { path:'joblist',component:ListjobComponent},\r\n    {\r\n       path: '',\r\n      redirectTo: '/joblist', //sets default page to be displayed to user once project runs;\r\n      pathMatch: 'full'\r\n  },\r\n  ];","module.exports = \".navbar-inverse {\\r\\n    border-color: #7C2289;\\r\\n    background-image: linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n}\"","module.exports = \"\\n <nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: white\\\">BYJU'S JOB PORTAL</a>\\n      </div>\\n      <ul class=\\\"nav navbar-nav\\\">\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li  routerLink=\\\"/jobsearch\\\"><a><span class=\\\"glyphicon glyphicon-search\\\" ></span> Search Jobs</a></li>\\n        <li routerLink=\\\"/joblist\\\"><a><span class=\\\"glyphicon glyphicon-eye-open\\\"></span> View Jobs</a></li>\\n      </ul>\\n    </div>\\n  </nav>\\n <router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'job-search';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SearchjobComponent } from './searchjob/searchjob.component';\nimport { ListjobComponent } from './listjob/listjob.component';\nimport { routes} from './app-routing/routes';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchjobComponent,\n    ListjobComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"label{\\r\\n    color:white;\\r\\n    margin:0 0 0 10px;\\r\\n  }\\r\\n  .panel-default>.panel-heading {\\r\\n    color: white;\\r\\n    background-image:linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n    border-color: #ddd;\\r\\n }\\r\\n  thead{\\r\\n  color: #fff;    \\r\\n    background-image: linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n }\\r\\n  table {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0;\\r\\n  width: 100%;\\r\\n  border: 1px solid #ddd;\\r\\n}\\r\\n  .text-margin{\\r\\n  margin: 10px 0 0 0;\\r\\n}\\r\\n  th, td {\\r\\n  text-align: center;\\r\\n  padding: 8px;\\r\\n}\\r\\n\"","module.exports = \"\\n   <div class=\\\"container\\\">\\n     <div class=\\\"row\\\">\\n       <div class=\\\"row-sm-2\\\">\\n         <div class=\\\"col-sm-3\\\"></div>\\n         <div class=\\\"col-sm-6\\\">\\n          <span><h1>Total Number of Jobs Found {{ job_pool.length }}</h1></span>\\n        </div>\\n         <div class=\\\"col-sm-3\\\"></div>\\n         \\n       </div>\\n       <div class=\\\"row-sm-10\\\">\\n          <div class=\\\"col-sm-12\\\" style=\\\"margin-top:40px;overflow-x:auto;height:500px\\\">\\n              <table class=\\\"table table-bordered\\\">\\n              <thead >\\n                  <tr>\\n                      <th>applylink</th>\\n                      <th>companyname</th>\\n                      <th>created</th>\\n                      <th>enddate</th>\\n                      <th>experience</th>\\n                      <th>jd</th>\\n                      <th>location</th>\\n                      <th>salary</th>\\n                      <th>skills</th>\\n                      <th>source</th>\\n                      <th>startdate</th>\\n                      <th>title</th>\\n                      <th>type</th>\\n                    </tr> \\n                </thead>\\n                <tbody >\\n                    <tr *ngFor=\\\"let job of job_pool;let i=index\\\">\\n                        <td>{{ job.applylink }}</td>\\n                        <td>{{ job.companyname }}</td>\\n                        <td>{{ job.created }}</td>\\n                        <td>{{ job.enddate }}</td>\\n                        <td>{{ job.experience }}</td>\\n                        <td>{{ job.jd }}</td>\\n                        <td>{{ job.location }}</td>\\n                        <td>{{ job.salary }}</td>\\n                        <td>{{ job.skills }}</td>\\n                        <td>{{ job.source }}</td>\\n                        <td>{{ job.startdate }}</td>\\n                        <td>{{ job.title }}</td>\\n                        <td>{{ job.type }}</td>\\n                      </tr>   \\n                      </tbody>\\n                </table>\\n              </div>\\n       </div>\\n     </div>\\n   </div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-listjob',\n  templateUrl: './listjob.component.html',\n  styleUrls: ['./listjob.component.css']\n})\nexport class ListjobComponent implements OnInit {\n  private job_pool=[];\n  constructor(private http:HttpClient) { \n    this.http.get(\"https://api.myjson.com/bins/kez8a\").subscribe(result=>result['jobsfeed'].forEach(job => {\n      Object.keys(job).forEach(key => {\n        if(job[key]=='')\n        {\n          job[key]=\"Not mentioned\";\n        }   \n     \n      });\n      this.job_pool.push(job);\n  })\n    );\n  }\n  ngOnInit() {\n    \n   }\n\n}\n","module.exports = \".searchbtn {\\r\\n    color: #fff;\\r\\n    border-color: #7C2289;\\r\\n    background-image: linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n }\\r\\n label{\\r\\n    color:white;\\r\\n    margin:0 0 0 10px;\\r\\n  }\\r\\n .panel-default>.panel-heading {\\r\\n    color: white;\\r\\n    background-image:linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n    border-color: #ddd;\\r\\n }\\r\\n thead{\\r\\n  color: #fff;    \\r\\n    background-image: linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n }\\r\\n table {\\r\\n  border-collapse: collapse;\\r\\n  border-spacing: 0;\\r\\n  width: 100%;\\r\\n  border: 1px solid #ddd;\\r\\n}\\r\\n .text-margin{\\r\\n  margin: 10px 0 0 0;\\r\\n}\\r\\n th, td {\\r\\n  text-align: center;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \" <div class=\\\"container\\\">\\n   <div class=\\\"row\\\">\\n     <div class=\\\"row-sm-2\\\">\\n       <div class=\\\"col-sm-2\\\">&nbsp;&nbsp;&nbsp;&nbsp;Based on Experience\\n          <select #expoptions (change)=\\\"filter_experience(expoptions.value);\\\" class=\\\"form-control\\\" >\\n              <option>Select</option>\\n              <option *ngFor=\\\"let experience of job_experiences\\\" value={{experience}} style=\\\"color: blue\\\">{{ experience }}</option>\\n          </select>\\n       </div>\\n       <div class=\\\"col-sm-2\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Based on Location\\n          <select #locoptions (change)=\\\"filter_location(locoptions.value);\\\" class=\\\"form-control\\\" >\\n              <option>Select</option>\\n              <option *ngFor=\\\"let location of job_locations\\\" value={{location}} style=\\\"color: blue\\\">{{ location }}</option>\\n          </select>\\n       </div>\\n       <div class=\\\"col-sm-2\\\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Based on Skills\\n        <select #skillset (change)=\\\"filter_skill(skillset.value);\\\" class=\\\"form-control\\\" >\\n            <option>Select</option>\\n            <option *ngFor=\\\"let skill of job_skills\\\" value={{skill}} style=\\\"color: blue\\\">{{ skill }}</option>\\n        </select>\\n       </div>\\n       <div class=\\\"col-sm-2\\\">Based on Company Name\\n          <select #companyname (change)=\\\"filter_company(companyname.value);\\\" class=\\\"form-control\\\" >\\n              <option>Select</option>\\n              <option *ngFor=\\\"let company of job_companies\\\" value={{company}} style=\\\"color: blue\\\">{{ company }}</option>\\n          </select>\\n       </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <input type=\\\"button\\\" value=\\\"Search\\\" class=\\\"form-control searchbtn\\\" style=\\\"margin-top: 19px\\\" (click)=\\\"filteration_using_keys()\\\">\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <h4>Jobs Based On User Search</h4> <p id=\\\"jobcount\\\" style=\\\"padding-left: 110px;color: red\\\"></p>\\n      </div>\\n         </div>\\n     <div class=\\\"row-sm-9\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\" style=\\\"margin-top:40px;overflow-x:auto;max-height: 550px\\\">\\n              <table class=\\\"table table-bordered\\\" >\\n              <thead >\\n                  <tr>\\n                      <th>Sno</th>\\n                      <th>applylink</th>\\n                      <th>companyname</th>\\n                      <th>created</th>\\n                      <th>enddate</th>\\n                      <th>experience</th>\\n                      <th>jd</th>\\n                      <th>location</th>\\n                      <th>salary</th>\\n                      <th>skills</th>\\n                      <th>source</th>\\n                      <th>startdate</th>\\n                      <th>title</th>\\n                    <th>type</th>\\n                    </tr> \\n                </thead>\\n                <tbody >\\n                    <tr *ngFor=\\\"let job of filtered_jobs;let i=index\\\">\\n                        <td>{{ i+1 }}</td>\\n                        <td>{{ job.applylink }}</td>\\n                        <td>{{ job.companyname }}</td>\\n                        <td>{{ job.created }}</td>\\n                        <td>{{ job.enddate }}</td>\\n                        <td>{{ job.experience }}</td>\\n                        <td>{{ job.jd }}</td>\\n                        <td>{{ job.location }}</td>\\n                        <td>{{ job.salary }}</td>\\n                        <td>{{ job.skills }}</td>\\n                        <td>{{ job.source }}</td>\\n                        <td>{{ job.startdate }}</td>\\n                        <td>{{ job.title }}</td>\\n                        <td>{{ job.type }}</td>                                         \\n                      </tr>   \\n                      </tbody>\\n                </table>\\n              </div>\\n            </div>\\n           </div>\\n     </div>\\n   </div>\\n </div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-searchjob',\n  templateUrl: './searchjob.component.html',\n  styleUrls: ['./searchjob.component.css']\n})\nexport class SearchjobComponent implements OnInit {\nprivate job_pool=[];\nprivate job_locations=[];\nprivate job_experiences=[];\nprivate job_companies=[];\nprivate job_skills=[];\nprivate experience_tosort='';\nprivate location_tosort='';\nprivate company_tosort='';\nprivate skill_tosort='';\nprivate filtered_jobs=[];\n  constructor(private http:HttpClient) { \n    this.http.get(\"https://api.myjson.com/bins/kez8a\").subscribe(result=>result['jobsfeed'].forEach(job => { //getting the whole json data from api end point\n      this.job_pool.push(job);\n      if(job['experience']!='')\n      {\n        this.job_experiences.push(job['experience']);  //getting all expereince levels from api data for adding in Drop down \n      }\n      if(job['location']!='')\n      {\n        this.job_locations.push(job['location']);  //getting all Locations from api data for adding in Drop down \n      }\n      if(job['skills']!='')\n      {\n        const arr=job['skills'].split(',');\n        arr.find(skill=>{\n          this.job_skills.push(skill);  //getting all Skill set from api data for adding in Drop down \n        })\n      }\n      if(job['companyname']!='')\n      {\n        this.job_companies.push(job['companyname']);  //getting all Comapany names from api data for adding in Drop down \n      }\n  })\n    );\n  } \n  \n  filter_experience(experience){\n    this.experience_tosort='';\n    this.experience_tosort=experience;    //holds the experience level to be filtered\n    if(experience=='Select')\n    {\n      this.filtered_jobs.length=0;\n      (document.getElementById('jobcount') as HTMLInputElement).innerText='0';\n    }\n  }\n\n  filter_location(location){\n    this.location_tosort='';\n    this.location_tosort=location;  //holds the Location to be filtered\n    if(location=='Select')\n    {\n      this.filtered_jobs.length=0;\n      (document.getElementById('jobcount') as HTMLInputElement).innerText='0';\n    }\n  }\n\n  filter_company(company){\n    this.company_tosort='';\n    this.company_tosort=company;  //holds the Company name to be filtered\n    if(company=='Select')\n    {\n      this.filtered_jobs.length=0;\n      (document.getElementById('jobcount') as HTMLInputElement).innerText='0';\n    }\n  }\n\n  filter_skill(skill){\n    this.skill_tosort='';\n    this.skill_tosort=skill;  //holds the skill set to be filtered\n    if(skill=='Select')\n    {\n      this.filtered_jobs.length=0;\n      (document.getElementById('jobcount') as HTMLInputElement).innerText='0';\n    }\n  }\n\n  filteration_using_keys(){   // Process of Filtering either experience or location or companyname or skil set to be Filtered for User\n    if( (this.experience_tosort=='' || this.experience_tosort==\"Select\" ) && (this.location_tosort=='' || this.location_tosort==\"Select\") && (this.company_tosort=='' || this.company_tosort==\"Select\" ) && (this.skill_tosort=='' || this.skill_tosort==\"Select\" ) )\n    {\n      alert('Please Select a Keyword');\n    }\n    else if(this.experience_tosort!='' && this.experience_tosort!=\"Select\" ){\n      let expobj={};\n      expobj['key']='experience';\n      expobj['value']=this.experience_tosort;\n      this.filter_using_singlekey(expobj)\n    }\n    else if(this.location_tosort!='' && this.location_tosort!=\"Select\"){\n      let locobj={};\n      locobj['key']='location';\n      locobj['value']=this.location_tosort;\n      this.filter_using_singlekey(locobj);\n    }\n    else if(this.company_tosort!='' && this.company_tosort!=\"Select\" ){\n      let compnameobj={};\n      compnameobj['key']='companyname';\n      compnameobj['value']=this.company_tosort;\n      this.filter_using_singlekey(compnameobj)\n    }\n    else if(this.skill_tosort!='' && this.skill_tosort!=\"Select\" ){\n      this.filter_using_skills(this.skill_tosort);\n    }\n\n  }\n\n  filter_using_skills(skillset){ //Process of Filtering using Skill set\n    this.filtered_jobs.length=0;\n          this.job_pool.forEach(job=>{\n          const arr=job['skills'].split(',');\n            arr.find(skill=>{\n              if(skillset==skill){\n                Object.keys(job).forEach(key => {\n                  if(job[key]=='')\n                  {\n                    job[key]=\"Not mentioned\";\n                  }   \n                });\n                this.filtered_jobs.push(job);\n                let count:any=this.filtered_jobs.length;\n                (document.getElementById('jobcount') as HTMLInputElement).innerText=count;\n              }\n            })\n          })\n  }\n\n  filter_using_singlekey(data){ //Process of Filteration of Experience or Location or Company name\n    this.filtered_jobs.length=0;\n    this.job_pool.forEach(job=>{\n      if(data['value']==job[data['key']])\n      {\n        Object.keys(job).forEach(key => {\n          if(job[key]=='')\n          {\n            job[key]=\"Not mentioned\";\n          }   \n       \n        });\n        this.filtered_jobs.push(job);\n        let count:any=this.filtered_jobs.length;;\n        (document.getElementById('jobcount') as HTMLInputElement).innerText=count;\n      }\n    })\n  }\n\n\n  ngOnInit() {\n    (document.getElementById('jobcount') as HTMLInputElement).innerText='0'; //sets the default job count as 0;\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}